* >Natural Source Header 000000
* :Mode S
* :CP IBM01140
* :LineIncrement 10
* <Natural Source Header
**SAG GENERATOR: CST-SHELL                        VERSION: 4.1.1
**SAG TITLE: Help subsystem save subpr
**SAG SYSTEM: NATURAL-CONSTRUCT
**SAG DESCS(1): This CST module is used to save the help-text
**SAG PROGRAM-TYPE: N
**SAG PARAMETER-NAME(1): CSASTD
**SAG LOCAL-NAME(1): CSLZULDA
**SAG LOCAL-NAME(2): CSLSL01
**SAG MESSAGING-SUPPORT: X
************************************************************************
* Program  : CSHSAVE
* System   : NATURAL-CONSTRUCT
* Title    : Help subsystem save subpr
* Generated: Jan 09,97 at 09:32 AM by SAG
* Function : This CST module is used to save the help-text
*
*
*
* History
**SAG DEFINE EXIT CHANGE-HISTORY
* Changed on Dec 19,96 by SAG for release ____
* >
* >
* >
**SAG END-EXIT
************************************************************************
DEFINE DATA
**SAG DEFINE EXIT PARAMETER-DATA
  PARAMETER
  01 #PDA-HEADER-MAJOR-MINOR(A67)
  01 REDEFINE #PDA-HEADER-MAJOR-MINOR
    02 #PDA-TYPE-COMPONENT(A1)
    02 #PDA-MAJOR-COMPONENT(A32)
    02 #PDA-MINOR-COMPONENT(A32)
    02 #PDA-LANGUAGE-CODE (N2)
  01 #PDA-TOTAL-PAGES(N3)
  01 #PDA-HEADER1(A62)
  01 #PDA-HEADER2(A62)
  01 #PDA-LINK-TEXT (A60)
  01 #PDA-USER(A8)
  01 #PDA-SAVE-DATE(A8)
  01 #PDA-SAVE-TIME(N7)
  01 #PDA-HELP-LINES-PER-PAGE(P3)
  01 #PDA-PROFILE-NAME(A8)
  01 #PDA-WINDOW-BASE(A7)
  01 #PDA-WINDOW-LENGTH(P3)
  01 #PDA-WINDOW-COLUMNS(P3)
  01 #PDA-WINDOW-FRAME(L)
  01 #PDA-WINDOW-STAY(L)
  01 #PDA-DYNAMIC-ATTRIBUTE(A1/1:2)
  01 #PDA-MESSAGE-LIBRARY   (A8)
  01 #PDA-LINK-ATTRIB-BEGIN (A4)
  01 #PDA-LINK-ATTRIB-END   (A4)
*
**SAG END-EXIT
  PARAMETER USING CSASTD
  LOCAL USING CSLZULDA
  LOCAL USING CSLSL01
  LOCAL USING CNAMSG                  /* Message retrieval passing area
  LOCAL USING CSLRCODE                /* Message return codes
  LOCAL
  01 #PROGRAM (A8)
**SAG DEFINE EXIT LOCAL-DATA
*
* File views for headers and text
  01 NCST-HELP VIEW OF NCST-HELP
    02 TYPE-COMPONENT
    02 MAJOR-COMPONENT
    02 MINOR-COMPONENT
    02 LANGUAGE-CODE
    02 HEADER1
    02 HEADER2
    02 LINK-TEXT
    02 SAVE-USER
    02 SAVE-DATE
    02 SAVE-TIME
    02 TOTAL-PAGES
    02 HELP-PROFILE-NAME
    02 HELP-LINES-PER-PAGE
    02 WINDOW-BASE
    02 WINDOW-LENGTH
    02 WINDOW-COLUMNS
    02 WINDOW-FRAME
    02 REDEFINE WINDOW-FRAME
      03 WINDOW-FRAME-(L)
    02 WINDOW-STAY
    02 REDEFINE WINDOW-STAY
      03 WINDOW-STAY-(L)
    02 MAX-LINESIZE
    02 MAX-PAGESIZE
    02 MAX-SCREEN-WIDTH
    02 MAX-SCREEN-LENGTH
    02 DEFAULT-SCREEN-SIZE
    02 DYNAMIC-ATTRIBUTE(1:2)
    02 MESSAGE-LIBRARY
    02 LINK-ATTRIB-BEGIN
    02 LINK-ATTRIB-END
  01 NCST-HELP-LINES-U VIEW OF NCST-HELP-LINES
    02 LINE-TYPE-COMPONENT
    02 LINE-MAJOR-COMPONENT
    02 LINE-MINOR-COMPONENT
    02 LANGUAGE-CODE
    02 LINE-SEQUENCE
    02 LINE-TEXT(1:50)
    02 LINE-ATTR(1:50)
  01 NCST-HELP-LINES-D VIEW OF NCST-HELP-LINES
    02 LINE-TYPE-COMPONENT
    02 LINE-MAJOR-COMPONENT
    02 LINE-MINOR-COMPONENT
    02 LANGUAGE-CODE
    02 LINE-SEQUENCE
    02 LINE-TEXT(1:50)
    02 LINE-ATTR(1:50)
  01 LINE-COUNT VIEW OF NCST-HELP-LINES
    02 LINE-MAJOR-MINOR-SEQ
    02 REDEFINE LINE-MAJOR-MINOR-SEQ
      03 FILLER 67X
      03 LINE-NR(B2)
*
* Other variables
  01 #LINE-MAJOR-MINOR-SEQ(A69)
  01 REDEFINE #LINE-MAJOR-MINOR-SEQ
    02 #LINE-TYPE-COMPONENT(A1)
    02 #LINE-MAJOR-COMPONENT(A32)
    02 #LINE-MINOR-COMPONENT(A32)
    02 #LINE-LANGUAGE-CODE (N2)
    02 #LINE-SEQUENCE(B2)
  01 #START-LINES(A69)
  01 REDEFINE #START-LINES
    02 #START-HEADER(A67)
    02 REDEFINE #START-HEADER
      03 #START-TYPE(A1)
      03 #START-MAJOR(A32)
      03 #START-MINOR(A32)
      03 #START-LANGUAGE-CODE (N2)
    02 #START-SEQ(B2)
*
  01 #CURRENT-HIGH(A69)
  01 REDEFINE #CURRENT-HIGH
    02 #FILLER3(A67)
    02 #HIGH-SEQ(B2)
  01 #CURRENT-LOW(A69)
  01 REDEFINE #CURRENT-LOW
    02 #FILLER2(A67)
    02 #LOW-SEQ(B2)
*
* Miscellaneous variables
  01 #HEADER-EXISTS(L)
  01 #I2(I2)
  01 #I(P7)
  01 #J(P7)
  01 #LEN(N3)
  01 #LINES(P7)
  01 #OCC-INDEX(P3)
  01 #OFFSET(N3)
  01 #SAVED(L)
  01 #TEMP-HIGH-SEQ(B2)
  01 #REPLACED(L)
  01 #WIDTH(N3)
*
* vars used for headings
  01 #THEADER1(A79)
  01 #THEADER2(A79)
  01 #TEMP-HEADER(A79)
  01 REDEFINE #TEMP-HEADER
    02 #TCHAR(A1/79)
  01 #CENTERED-HEADER(A79)
  01 REDEFINE #CENTERED-HEADER
    02 #CCHAR(A1/79)
*
**SAG END-EXIT
END-DEFINE
 PROG.    /* to allow escape from routine.
REPEAT
*
PERFORM INITIALIZATIONS
**SAG DEFINE EXIT START-OF-PROGRAM
*
* Check if entered type component is valid
  IF NOT #PDA-TYPE-COMPONENT
    EQ 'P' OR EQ 'D' OR EQ 'F' OR EQ 'O' OR EQ 'M' THEN
    ASSIGN CNAMSG.MSG-DATA(1) = '*1309.1' /* Type
    ASSIGN CNAMSG.MSG-DATA(2) = '*2085.1' /* Component
    ASSIGN CNAMSG.MSG-DATA(3) = 'P, O, D, F, M'
    INCLUDE CU--SERR  '1020'
     ''':1::2:is invalid; use:3:'''
  END-IF
*
  IF NOT #PDA-LANGUAGE-CODE EQ 1 THRU 60
    ASSIGN CNAMSG.MSG-DATA(1) = '*1309.2' /* Language
    ASSIGN CNAMSG.MSG-DATA(2) = '*2085.1' /* Component
    INCLUDE CU--SERR  '1000'
     ''':1::2:is invalid'''
  END-IF
**SAG END-EXIT
*
**SAG DEFINE EXIT GENERATE-CODE
*
  RESET #START-LINES #CURRENT-LOW #CURRENT-HIGH #I #J
*
* Set current high and low text keys
  ASSIGN #START-TYPE  = #PDA-TYPE-COMPONENT
  ASSIGN #START-MINOR = #PDA-MINOR-COMPONENT
  ASSIGN #START-MAJOR = #PDA-MAJOR-COMPONENT
  ASSIGN #START-LANGUAGE-CODE = #PDA-LANGUAGE-CODE
*
  ASSIGN #START-SEQ = 0
  ASSIGN #CURRENT-LOW = #CURRENT-HIGH = #START-LINES
  ASSIGN #HIGH-SEQ = 9999
  ASSIGN #LOW-SEQ = 0
  GET-LINE-KEYS.
  HISTOGRAM LINE-COUNT FOR
            LINE-MAJOR-MINOR-SEQ FROM #CURRENT-LOW THRU #CURRENT-HIGH
    IF *COUNTER(GET-LINE-KEYS.) = 1 THEN
      ASSIGN #LOW-SEQ = LINE-COUNT.LINE-NR
    END-IF
    /*
    /* Make sure that #HIGH-SEQ is adjusted outside the loop since this
    /* is evaluated as the ENDING AT each time through the histogram.
    ASSIGN #TEMP-HIGH-SEQ = LINE-COUNT.LINE-NR
  END-HISTOGRAM /* GET-LINE-KEYS
  ASSIGN #HIGH-SEQ = #TEMP-HIGH-SEQ
  IF *COUNTER(GET-LINE-KEYS.) = 0 THEN
    RESET #LOW-SEQ #HIGH-SEQ
  END-IF
  ASSIGN #PDA-TOTAL-PAGES = *COUNTER(GET-LINE-KEYS.)
*
************************************************************************
DEFINE SUBROUTINE INIT-CB
************************************************************************
*
*  Subroutine to initialize the control block
  ASSIGN INSCRSIZE = 1
  ASSIGN INLENGTH = SL01-LENGTH
  ASSIGN COEDITOR = H'07'
  CALL 'CMZUL' 'I' INLIB COSCLEN1
END-SUBROUTINE  /* INIT-CB
*
* Initialize the CMZUL area, and make sure we're at top of buffer
PERFORM INIT-CB
  ASSIGN RUCOM = 'TOP'
  CALL 'CMZUL' 'R' RUXPOS SL01
*
* Outside dummy find to use HELP-TEXT buffer
  ASSIGN #OCC-INDEX = 0
*
  RESET CSASTD.MSG CSASTD.RETURN-CODE
  D. FIND NCST-HELP-LINES-D WITH LINE-MAJOR-MINOR-SEQ = ' '
    IF NO RECORDS FOUND
      ENTER
    END-NOREC
    RESET LINE-TEXT(D./1:50) LINE-ATTR(D./1:50)
    ASSIGN #LINES = RULINNR
FOR #I = 1 TO #LINES
      ADD 1 TO #OCC-INDEX
      EXAMINE SL01.#HELP-TEXT FOR H'00' AND REPLACE WITH ' '
      EXAMINE SL01.#HELP-ATTR FOR H'00' AND REPLACE WITH ' '
      ASSIGN LINE-TEXT(D./#OCC-INDEX) = SL01.#HELP-TEXT
      ASSIGN LINE-ATTR(D./#OCC-INDEX) = SL01.#HELP-ATTR
      ASSIGN RUCOM = '+1'
      CALL 'CMZUL' 'R' RUXPOS SL01
      /*
      /* if record full or last line of buffer or page break, write rec
      IF #OCC-INDEX = #PDA-HELP-LINES-PER-PAGE OR
                     SL01.#HELP-ATTR = SCAN 'P' OR #I = #LINES THEN
      ASSIGN #I2 = #START-SEQ
      ADD 1 TO #I2
      ASSIGN #START-SEQ = #I2
        /*
        /* Setup new text key
        /*
        ASSIGN LINE-TYPE-COMPONENT  = #START-TYPE
        ASSIGN LINE-MAJOR-COMPONENT = #START-MAJOR
        ASSIGN LINE-MINOR-COMPONENT = #START-MINOR
        ASSIGN LINE-SEQUENCE        = #START-SEQ
        ASSIGN #PDA-TOTAL-PAGES     = #START-SEQ
        ASSIGN NCST-HELP-LINES-D.LANGUAGE-CODE = #START-LANGUAGE-CODE
        IF #START-LINES = #CURRENT-LOW THRU #CURRENT-HIGH
          F. FIND(1) NCST-HELP-LINES-U
                WITH LINE-MAJOR-MINOR-SEQ = #START-LINES
            RESET LINE-TEXT(F./1:50) LINE-ATTR(F./1:50)
            FOR #J = 1 TO #PDA-HELP-LINES-PER-PAGE
              ASSIGN LINE-TEXT(F./#J) = LINE-TEXT(D./#J)
              ASSIGN LINE-ATTR(F./#J) = LINE-ATTR(D./#J)
            END-FOR
            UPDATE (F.)
            ASSIGN #REPLACED = TRUE
          END-FIND
          IF *NUMBER(F.) NE 1
            BACKOUT TRANSACTION
            INCLUDE CU--SERR  '1087'
              '''Intervening modification or purge, try again'''
          END-IF
        ELSE
          STORE NCST-HELP-LINES-D
          ASSIGN #SAVED = TRUE
        END-IF
        RESET #OCC-INDEX LINE-TEXT(D./1:50) LINE-ATTR(D./1:50)
      END-IF /* ... OF WRITE RECORD
    END-FOR  /* ... of for loop
  END-FIND   /* ... OF DUMMY FIND
*
  ASSIGN  #HEADER-EXISTS = TRUE
  FIND NCST-HELP WITH HEADER-MAJOR-MINOR = #START-HEADER
    IF NO RECORD FOUND
      RESET #HEADER-EXISTS
    END-NOREC
    /*
    ASSIGN TYPE-COMPONENT   = #START-TYPE
    ASSIGN MAJOR-COMPONENT  = #START-MAJOR
    ASSIGN MINOR-COMPONENT  = #START-MINOR
    ASSIGN NCST-HELP.LANGUAGE-CODE = #START-LANGUAGE-CODE
    ASSIGN #THEADER1 = #PDA-HEADER1
    ASSIGN #THEADER2 = #PDA-HEADER2
    PERFORM CENTER-HEADERS
    ASSIGN HEADER1 = #THEADER1
    ASSIGN HEADER2 = #THEADER2
    ASSIGN TOTAL-PAGES  = #START-SEQ
    ASSIGN SAVE-USER = #PDA-USER
    ASSIGN SAVE-DATE = *DATN
    ASSIGN SAVE-TIME = *TIMN
    ASSIGN #PDA-SAVE-TIME = SAVE-TIME
    ASSIGN #PDA-SAVE-DATE = SAVE-DATE
    ASSIGN HELP-LINES-PER-PAGE = #PDA-HELP-LINES-PER-PAGE
    ASSIGN HELP-PROFILE-NAME = #PDA-PROFILE-NAME
    ASSIGN WINDOW-BASE = #PDA-WINDOW-BASE
    ASSIGN WINDOW-LENGTH = #PDA-WINDOW-LENGTH
    ASSIGN WINDOW-COLUMNS = #PDA-WINDOW-COLUMNS
    ASSIGN WINDOW-FRAME- = #PDA-WINDOW-FRAME
    ASSIGN WINDOW-STAY- = #PDA-WINDOW-STAY
    ASSIGN DYNAMIC-ATTRIBUTE(*) = #PDA-DYNAMIC-ATTRIBUTE(*)
    ASSIGN NCST-HELP.LINK-TEXT         = #PDA-LINK-TEXT
    ASSIGN NCST-HELP.MESSAGE-LIBRARY   = #PDA-MESSAGE-LIBRARY
    ASSIGN NCST-HELP.LINK-ATTRIB-BEGIN = #PDA-LINK-ATTRIB-BEGIN
    ASSIGN NCST-HELP.LINK-ATTRIB-END   = #PDA-LINK-ATTRIB-END
    IF #HEADER-EXISTS
      UPDATE
    ELSE
      STORE NCST-HELP
    END-IF
  END-FIND
  COMPRESS #PDA-TYPE-COMPONENT #PDA-MAJOR-COMPONENT
               #PDA-MINOR-COMPONENT #PDA-LANGUAGE-CODE TO
                  CNAMSG.MSG-DATA(1) WITH DELIMITER  '/'
  IF #SAVED THEN
    ASSIGN CNAMSG.RETURN-CODE = CSLRCODE.#OK
    INCLUDE CU--GMSG  '0042'
       ''':1:saved successfully.'''
  ELSE
    IF #REPLACED THEN
      ASSIGN CNAMSG.RETURN-CODE = CSLRCODE.#OK
      INCLUDE CU--GMSG  '0043'
       ''':1:replaced successfully.'''
    END-IF
  END-IF
*
* If help length was shortened, delete trailing records
      ASSIGN #I2 = #START-SEQ
      ADD 1 TO #I2
      ASSIGN #START-SEQ = #I2
  IF #START-LINES LE #CURRENT-HIGH
    READ NCST-HELP-LINES-U BY LINE-MAJOR-MINOR-SEQ
       STARTING FROM #START-LINES
      ASSIGN #LINE-TYPE-COMPONENT  = LINE-TYPE-COMPONENT
      ASSIGN #LINE-MAJOR-COMPONENT = LINE-MAJOR-COMPONENT
      ASSIGN #LINE-MINOR-COMPONENT = LINE-MINOR-COMPONENT
      ASSIGN #PDA-LANGUAGE-CODE = NCST-HELP-LINES-U.LANGUAGE-CODE
      ASSIGN #LINE-SEQUENCE = LINE-SEQUENCE
      IF #LINE-MAJOR-MINOR-SEQ GT #CURRENT-HIGH ESCAPE BOTTOM END-IF
      DELETE
    END-READ
  END-IF
  END OF TRANSACTION
  PERFORM RESET-CMZUL
*
***********************************************************************
DEFINE SUBROUTINE CENTER-HEADERS
***********************************************************************
*
* Center the headings before saving
  IF #PDA-WINDOW-FRAME
    COMPUTE #WIDTH = #PDA-WINDOW-LENGTH - 5
  ELSE
    COMPUTE #WIDTH = #PDA-WINDOW-LENGTH - 2
  END-IF
*
*  now center the two headers
  IF #THEADER1 NE ' '
    ASSIGN #TEMP-HEADER = #THEADER1
    EXAMINE #TEMP-HEADER FOR H'00' AND DELETE GIVING LENGTH IN #LEN
    COMPUTE #OFFSET = (#WIDTH - #LEN) / 2
    IF #OFFSET GT 0 THEN
      PERFORM CENTER
      ASSIGN #TEMP-HEADER = #CENTERED-HEADER
    END-IF
    ASSIGN #THEADER1 = #TEMP-HEADER
  END-IF
  RESET #CENTERED-HEADER
  IF #THEADER2 NE ' '
    ASSIGN #TEMP-HEADER = #THEADER2
    EXAMINE #TEMP-HEADER FOR H'00' AND DELETE GIVING LENGTH IN #LEN
    COMPUTE #OFFSET = (#WIDTH - #LEN) / 2
    IF #OFFSET GT 0 THEN
      PERFORM CENTER
      ASSIGN #TEMP-HEADER = #CENTERED-HEADER
    END-IF
    ASSIGN #THEADER2 = #TEMP-HEADER
  END-IF
END-SUBROUTINE  /* CENTER-HEADER
*
***********************************************************************
DEFINE SUBROUTINE CENTER
***********************************************************************
*
  FOR #I = 1 TO #LEN
    ADD 1 TO #OFFSET
    ASSIGN #CCHAR(#OFFSET) = #TCHAR(#I)
  END-FOR
END-SUBROUTINE  /* CENTER
*
***********************************************************************
DEFINE SUBROUTINE RESET-CMZUL
***********************************************************************
*
* Reset CMZUL settings
  COMPRESS 'LET' 'T' TO RUCOM WITH DELIMITER
*
  CALL 'CMZUL' 'R' RUXPOS SL01
  ASSIGN INSCRSIZE = 18
  ASSIGN INLENGTH = SL01-LENGTH
  IF *MACHINE-CLASS = 'UNIX' OR = 'PC' THEN  /* UNIX and C machines
    ASSIGN COEDITOR = H'A7'
  ELSE  /* Mainframe
    ASSIGN COEDITOR = H'A3'
  END-IF
  ASSIGN COLWLENGTH = 4
  CALL 'CMZUL' 'I' INLIB COSCLEN1
END-SUBROUTINE  /* RESET-CMZUL
**SAG END-EXIT
*
************************************************************************
DEFINE SUBROUTINE CHECK-ERROR
************************************************************************
*
**SAG DEFINE EXIT BEFORE-CHECK-ERROR
*
* Use this user exit to for specific error checking
   IF CSASTD.RETURN-CODE = CSLRCODE.#INTERRUPT(*)
      PERFORM RESET-CMZUL
   END-IF
**SAG END-EXIT
  DECIDE FOR FIRST CONDITION
    WHEN CSASTD.RETURN-CODE = CSLRCODE.#CONTINUE(*)
      IGNORE
    WHEN CSASTD.RETURN-CODE = CSLRCODE.#INTERRUPT(*)
      ESCAPE BOTTOM(PROG.) IMMEDIATE
    WHEN NONE
      IGNORE
  END-DECIDE
END-SUBROUTINE /* CHECK-ERROR
*
***********************************************************************
DEFINE SUBROUTINE GET-MESSAGE
***********************************************************************
*
* Retrieve message text and move to messaging data area
  PERFORM GET-MESSAGE-TEXT
  MOVE BY NAME CNAMSG TO CSASTD
  RESET CNAMSG.INPUT-OUTPUTS
END-SUBROUTINE /* GET-MESSAGE
*
***********************************************************************
DEFINE SUBROUTINE GET-MESSAGE-TEXT
***********************************************************************
*
* Call message retrieval and substitution module
  CALLNAT 'CNUMSG' CNAMSG CSASTD
  PERFORM CHECK-ERROR
END-SUBROUTINE /* GET-MESSAGE-TEXT
*
************************************************************************
DEFINE SUBROUTINE INITIALIZATIONS
************************************************************************
*
  ASSIGN #PROGRAM = *PROGRAM
*
END-SUBROUTINE /* INITIALIZATIONS
*
ESCAPE BOTTOM(PROG.) IMMEDIATE
END-REPEAT  /* PROG.
END
